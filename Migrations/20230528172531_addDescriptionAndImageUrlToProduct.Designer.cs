// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MovieWeb.Data;

#nullable disable

namespace MovieWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230528172531_addDescriptionAndImageUrlToProduct")]
    partial class addDescriptionAndImageUrlToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MovieWeb.Areas.Admin.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("imageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 12,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ornare tortor ligula, nec congue justo vulputate sed. Sed convallis tellus.",
                            Director = "Steven Spielberg",
                            ListPrice = 20.329999999999998,
                            Name = "Jurassic Park",
                            Rating = 8.1999999999999993,
                            imageUrl = ""
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 6,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ornare tortor ligula, nec congue justo vulputate sed. Sed convallis tellus.",
                            Director = "George Lucas",
                            ListPrice = 25.989999999999998,
                            Name = "Stars Wars",
                            Rating = 8.5999999999999996,
                            imageUrl = ""
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec ornare tortor ligula, nec congue justo vulputate sed. Sed convallis tellus.",
                            Director = "David Silverman",
                            ListPrice = 10.5,
                            Name = "The Simpsons",
                            Rating = 7.2999999999999998,
                            imageUrl = ""
                        });
                });

            modelBuilder.Entity("MovieWeb.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Horror"
                        });
                });

            modelBuilder.Entity("MovieWeb.Areas.Admin.Models.Product", b =>
                {
                    b.HasOne("MovieWeb.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
